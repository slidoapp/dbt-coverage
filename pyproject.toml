[tool.poetry]
name = "dbt-coverage"
version = "0.3.7"
description = "One-stop-shop for docs and test coverage of dbt projects"
authors = ["Andrej Å vec <asvec@slido.com>"]
readme = 'README.md'
license = "MIT"
repository = "https://github.com/slidoapp/dbt-coverage"
homepage = "https://github.com/slidoapp/dbt-coverage"
documentation = "https://github.com/slidoapp/dbt-coverage"
classifiers = [
  "Operating System :: OS Independent",
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
]

[tool.poetry.dependencies]
python = "^3.7"
typer = ">=0.4,<1"

[tool.poetry.group.dev.dependencies]
black = {version = "==24.2.0", python = ">=3.8"}  # Use the same version as in .pre-commit-config.yaml
isort = {version = "==5.13.2", python = ">=3.8"}  # Use the same version as in .pre-commit-config.yaml
pre-commit = {version = "^3.6.2", python = ">=3.9"}

tox = { version = "^4", python = "^3.7" }
tomli = { version = "*", python = "^3.7" }  # Needed for a successful resolution of tox's transitive dependencies
typing-extensions = { version = "*", python = "^3.7" }  # Needed for a successful resolution of tox's transitive dependencies
colorama = { version = "*", python = "^3.7" }  # Needed for a successful resolution of tox's transitive dependencies

# Needed for running tests locally
[tool.poetry.group.test.dependencies]
pytest = "^7"
pytest-docker = "^2"

dbt-core = { version = "~1.7.0", python = "^3.8" }
dbt-postgres = { version = "~1.7.0", python = "^3.8" }
importlib-metadata = { version = "*", python = "^3.8" }  # Needed for a successful resolution of dbt's transitive dependencies

[tool.poetry.scripts]
dbt-coverage = 'dbt_coverage.__init__:app'

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99
